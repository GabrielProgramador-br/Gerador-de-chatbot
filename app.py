import streamlit as st
import openai
import graphviz

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Gerador de Projeto de Bot", layout="wide")
st.title("ü§ñ Gerador de Projeto de Chatbot com IA")

st.markdown("Cole abaixo um resumo da ideia do seu bot, e receba um plano completo com fluxo, prompts e integra√ß√µes.")

# üîê Sua chave da OpenAI (certifique-se de que ela est√° no secrets)
client = openai.OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

# Entrada do usu√°rio
resumo = st.text_area("‚úçÔ∏è Resumo da ideia do bot", height=300)

if st.button("Gerar Projeto"):
    if not resumo.strip():
        st.warning("Por favor, insira um resumo do projeto.")
        st.stop()

    with st.spinner("Gerando etapas..."):

        resposta = client.chat.completions.create(
            model="gpt-4o",  # ou "gpt-4"
            messages=[
                {
                    "role": "system",
                    "content": (
                        """Voc√™ √© um especialista em UX, IA e bots. A partir de uma breve descri√ß√£o da ideia do projeto de chatbot, sua tarefa √© criar um planejamento completo, t√©cnico e estrat√©gico, respondendo detalhadamente aos t√≥picos a seguir:

üìå INSTRU√á√ïES GERAIS:
Seja detalhista em cada etapa, explicando com profundidade como ser√° implementado.

Utilize linguagem acess√≠vel, por√©m profissional e estrat√©gica.

Gere respostas com subt√≠tulos para cada item, conforme os t√≥picos abaixo.

Na se√ß√£o de prompts, gere exemplos prontos para IA generativa, com delimitadores claros e instru√ß√µes embutidas no texto.

üß† T√ìPICOS PARA PLANEJAMENTO COMPLETO:
1. Nome da Persona
Caso o nome n√£o seja fornecido, crie um nome adequado ao contexto da empresa ou servi√ßo.

Justifique a escolha com base na fun√ß√£o e tom do bot.

2. Tom de Voz
Defina o tom com at√© 3 palavras-chave (ex: Profissional, Emp√°tico, Acolhedor).

Descreva como esse tom se manifesta na linguagem (uso de emojis, jarg√µes, express√µes comuns, etc.).

3. O que o Bot Resolve e Como
Descreva, com profundidade, qual problema real esse bot resolve e como ele faz isso com clareza.

Enfatize os ganhos de efici√™ncia, humaniza√ß√£o e automatiza√ß√£o.

4. Integra√ß√µes Poss√≠veis
Liste todas as APIs, sistemas internos ou externos que o bot pode se integrar.

Inclua: autentica√ß√£o, CRM, ERPs, gateways de pagamento, busca por CPF/CNPJ, etc.

Para cada uma, descreva o benef√≠cio e o momento do fluxo em que ser√° usada.

5. Possibilidade de Utilizar IA (Sim ou N√£o)
Explique se a IA generativa ser√° usada e para quais finalidades espec√≠ficas:

Interpreta√ß√£o de inten√ß√£o

Resposta aberta

Classifica√ß√£o de entrada

Rea√ß√£o emocional

Simula√ß√£o

Gera√ß√£o de mensagens

6. Tipo Ideal de Chatbot
Escolha entre: aberto, fechado, guiado ou misto.

Justifique com base no p√∫blico, objetivo e n√≠vel de autonomia esperada.

7. Planejamento de Falhas / Evasivas
Descreva como o bot deve reagir a erros comuns:

Erro de sistema

Dados inv√°lidos

Falta de resposta do usu√°rio

Pedido fora do escopo

Crie respostas humanizadas e orientativas, com tom coerente com o bot.

8. Pontos de Aten√ß√£o
Aponte riscos t√©cnicos, UX e operacionais.

Indique medidas preventivas ou a√ß√µes de monitoramento.

9. Desenho do Fluxo do Usu√°rio
Descreva a jornada principal no formato:

css
Copiar
Editar
[In√≠cio] ‚Üí [Identifica√ß√£o] ‚Üí [Valida√ß√£o de dados] ‚Üí [Consulta/Simula√ß√£o] ‚Üí [Escolha de Op√ß√£o] ‚Üí [Confirma√ß√£o] ‚Üí [Encerramento]
Ao final, converta o fluxo em uma vers√£o simplificada para diagrama, com setas e caixas.

10. Dados Gerados pela Jornada
Liste quais dados ser√£o capturados (ex: nome, CPF, status da solicita√ß√£o, tipo de produto, etapa final).

Especifique como esses dados podem ser usados em relat√≥rios e tomada de decis√£o.

11. Prompts para a IA (Formatados)
Crie ao menos 4 prompts de IA generativa, com estrutura clara e delimitadores.

Utilize o seguinte modelo:

shell
Copiar
Editar
## Prompt: {nome da tarefa}
### Objetivo:
{descri√ß√£o do que a IA deve fazer}
### Entrada esperada:
{textos ou perguntas que o usu√°rio pode fazer}
### Formato da Resposta:
{formato estruturado ou humanizado esperado}
### Exemplo de uso:
Usu√°rio: {mensagem}
IA: {resposta ideal}
‚ùó Os prompts devem ser pensados para IA generativa em produ√ß√£o e cobrir casos reais de atendimento.

‚ú≥Ô∏è INSTRU√á√ÉO FINAL:
Responda a todos os t√≥picos como um especialista t√©cnico e estrat√©gico, com profundidade, exemplos pr√°ticos, e com aplicabilidade imediata para desenvolvimento ou apresenta√ß√£o de projeto."""
                    )
                },
                {"role": "user", "content": resumo}
            ],
            temperature=0.7
        )

        conteudo = resposta.choices[0].message.content

        # Separar texto do fluxo para virar imagem
        partes = conteudo.split("###")
        texto_projeto = ""
        fluxo_bruto = ""

        for parte in partes:
            if "fluxo" in parte.lower():
                fluxo_bruto = parte
            else:
                texto_projeto += "###" + parte

        st.markdown("## üìã Projeto Gerado")
        st.markdown(texto_projeto)

        # Gera√ß√£o do fluxo visual com graphviz
        st.markdown("## üîÑ Fluxo do Usu√°rio (visual)")
        with st.expander("Ver fluxo visual"):
            fluxo = graphviz.Digraph()

            linhas = fluxo_bruto.strip().split("\n")
            for linha in linhas:
                if "‚Üí" in linha:
                    etapas = [et.strip() for et in linha.split("‚Üí")]
                    for i in range(len(etapas) - 1):
                        fluxo.edge(etapas[i], etapas[i + 1])

            st.graphviz_chart(fluxo)

    st.success("‚úÖ Projeto finalizado!!")
